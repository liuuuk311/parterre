version: '3.9'

services:
  db:
    image: postgres:15.3-alpine3.18
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
  redis:
    restart: unless-stopped
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
  app:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - ./web/:/web
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  worker:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    restart: unless-stopped
    command: celery -A core worker -l INFO
    volumes:
      - ./web/:/web
    env_file:
      - .env
    depends_on:
      - redis
      - db

  beat:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    restart: unless-stopped
    command: celery -A core beat -l INFO
    volumes:
      - ./web/:/web
    env_file:
      - .env
    depends_on:
      - redis
      - db

volumes:
  pg-data:
