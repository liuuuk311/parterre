# Generated by Django 4.1.7 on 2023-03-29 10:09

import artists.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("artists", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Track",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("spotify_id", models.CharField(max_length=64, unique=True)),
                ("name", models.CharField(max_length=256)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RenameModel(
            old_name="OtherProfiles",
            new_name="Profile",
        ),
        migrations.AddField(
            model_name="artist",
            name="image",
            field=models.ImageField(blank=True, default=None, null=True, upload_to=""),
        ),
        migrations.AddField(
            model_name="artist",
            name="spotify_url",
            field=models.URLField(default=None, max_length=256),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="artist",
            name="stage_name",
            field=models.CharField(blank=True, default=None, max_length=256, null=None),
        ),
        migrations.AlterField(
            model_name="artist",
            name="user",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                validators=[artists.models.restrict_number_of_users_per_artist],
            ),
        ),
        migrations.CreateModel(
            name="TrackPopularity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("spotify_popularity", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "track",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="popularity_history",
                        to="artists.track",
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
            },
        ),
        migrations.AddField(
            model_name="track",
            name="artists",
            field=models.ManyToManyField(to="artists.artist"),
        ),
        migrations.CreateModel(
            name="ArtistPopularity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("spotify_popularity", models.IntegerField()),
                ("spotify_followers", models.BigIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="popularity_history",
                        to="artists.artist",
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
            },
        ),
    ]
